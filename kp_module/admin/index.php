<?  // подключим все необходимые файлы:  require_once($_SERVER["DOCUMENT_ROOT"] . "/bitrix/modules/main/include/prolog_admin_before.php"); // первый общий пролог  require_once($_SERVER["DOCUMENT_ROOT"] . "/local/modules/kp_module/include.php"); // инициализация модуля  // подключим языковой файл  IncludeModuleLangFile(__FILE__);  $POST_RIGHT = check_right();  // если нет прав - отправим к форме авторизации с сообщением об ошибке  if ($POST_RIGHT == "D")    $APPLICATION->AuthForm(GetMessage("ACCESS_DENIED"));  $sort11 = "ID";  $order11 = "desc";  $sTableID = "b_kp_module"; // ID таблицы  $sort11 = "ID";  $order11 = "desc"; // echo $sort11.' = '.$order11;  $oSort = new CAdminSorting($sTableID, $sort11, $order11); // объект сортировки  $lAdmin = new CAdminList($sTableID, $oSort); // основной объект списка  // ******************************************************************** //  //                           ФИЛЬТР                                     //  // ******************************************************************** //  // *********************** /CheckFilter ******************************* //  // опишем элементы фильтра  $FilterArr = array(    "find",  );  // инициализируем фильтр  global $USER;  CModule::IncludeModule("kp_module");  $kp_elements = new kp_elements;  if ($_REQUEST['ACTION']) {    switch ($_REQUEST['ACTION']) {      //создать кп на основе шаблноа      case "create_kp":        if ($_REQUEST['ID']) {          $NEW_ID = $kp_elements->create_kp($_REQUEST['ID']);          if ($NEW_ID > 0) {            LocalRedirect("/bitrix/admin/kp_module_edit.php?TYPE=0&ID=" . $NEW_ID);          }        }        break;      case "copy":        $NEW_ID = $kp_elements->Copy($ID);        LocalRedirect("/bitrix/admin/kp_module_edit.php?TYPE=".$_REQUEST['TYPE']."&ID=" . $NEW_ID);        break;    }  }  if (!empty($_POST['new_action'])) {    $APPLICATION->RestartBuffer();    switch ($_POST['new_action']) {      case "send":        if (isset($_POST['ID'][0])) {          echo "/bitrix/admin/kp_module_send.php?ID=" . $_POST['ID'][0];          die();        }      case "edit":        if (isset($_POST['ID'][0])) {          echo "/bitrix/admin/kp_module_edit.php??TYPE=" . $_REQUEST['TYPE'] . "&ID=" . $_POST['ID'][0];        }        break;      case "active":        if (isset($_POST['ID'][0])) {          foreach ($_POST['ID'] as $ID__) {            $kp_elements->Update($ID__, array("ACTIVE" => 1));          }          echo '1';        }        break;      case "deactive":        if (isset($_POST['ID'][0])) {          foreach ($_POST['ID'] as $ID__) {            $kp_elements->Update($ID__, array("ACTIVE" => 0));          }          echo '1';        }        break;      case "open":        if (isset($_POST['ID'][0])) {          $kp_elemenet = $kp_elements->GetByID($_POST['ID'][0]);          echo "/kp/" . $kp_elemenet['KP_HREF'] . "/";        }        break;      case "copy":        if (isset($_POST['ID'][0])) {          $NEW_ID = $kp_elements->Copy($_POST['ID'][0]);          echo "/bitrix/admin/kp_module_edit.php?ID=" . $NEW_ID;        }        break;      case "delete":        if (isset($_POST['ID'][0])) {          @set_time_limit(0);          foreach ($_POST['ID'] as $ID__) {            if (!empty($ID__)) {              $kp_elements->Delete($ID__);            }          }        }        break;    }    die();  }  // ******************************************************************** //  //                ОБРАБОТКА ДЕЙСТВИЙ НАД ЭЛЕМЕНТАМИ СПИСКА              //  // ******************************************************************** //  // обработка одиночных и групповых действий  if (($arID = $lAdmin->GroupAction()) && $POST_RIGHT == "W") {    // если выбрано "Для всех элементов"    if ($_REQUEST['action_target'] == 'selected') {      $results = $kp_elements->GetAll($USER->GetID(), "`ID`");      while ($row = $results->Fetch()) {        $arID[] = $row['ID'];      }    }    // пройдем по списку элементов    foreach ($arID as $ID) {      if (strlen($ID) <= 0)        continue;      $ID = IntVal($ID);      if ($POST_RIGHT != "W")        continue;      // для каждого элемента совершим требуемое действие      switch ($_REQUEST['action']) {        // удаление        case "delete":          @set_time_limit(0);          $kp_elements->Delete($ID);          break;        case "delete2":          @set_time_limit(0);          $kp_elements->Delete($ID);          break;        case "copy":          $NEW_ID = $kp_elements->Copy($ID);          $lAdmin->ActionRedirect("/bitrix/admin/kp_module_edit.php?TYPE=2&ID=" . $NEW_ID);          die();          break;        case "activate":          $kp_elements->Update($ID, array("ACTIVE" => 1));          break;        case "deactivate":          $kp_elements->Update($ID, array("ACTIVE" => 0));          break;      }    }  }  // ******************************************************************** //  //                ВЫБОРКА ЭЛЕМЕНТОВ СПИСКА                              //  // ******************************************************************** //  $filter = "";  global $USER;  $AND = 0;  if (!isset($_REQUEST['del_filter'])) {    if ($_REQUEST['find'] || $_REQUEST['FIND_NAME'] || $_REQUEST['FIND_KP_COMPANY_NAME'])      $filter = "WHERE ";    if ($_REQUEST['find']) {      $filter = $filter . "`ID`=" . $_REQUEST['find'] . " AND ";      $AND = 1;    }    if ($_REQUEST['FIND_KP_COMPANY_NAME']) {      $filter = $filter . "`KP_COMPANY_NAME` LIKE '%" . $_REQUEST['FIND_KP_COMPANY_NAME'] . "%' AND ";      $AND = 1;    }    if ($_REQUEST['FIND_NAME']) {      $filter = $filter . "`KP_NAME` LIKE '%" . $_REQUEST['FIND_NAME'] . "%' AND ";      $AND = 1;    }    if (!in_array(1, CUser::GetUserGroup($USER->GetID()))) {      if (!empty($filter)) {        $AND = 0;        $filter = $filter . " (`USER_ID`=" . $USER->GetID() . " OR `USER_ID`=1)";      } else {        $filter = "WHERE `USER_ID`=" . $USER->GetID();      }    }    if ($AND) {    }  }  if ($_REQUEST['TYPE'] == 2) {    if ($AND) {      $filter = $filter . " `ACTIVE`=1 AND `TEMPLATE_ACTIVE`=1";    } else {      if (!in_array(1, CUser::GetUserGroup($USER->GetID()))) {        $filter = $filter . " AND `TEMPLATE_ACTIVE`=1";      } else {        $filter = $filter . " WHERE `TEMPLATE_ACTIVE`=1";      }    }  } else {    if ($AND) {      $filter = $filter . " `ACTIVE`=1 AND `TEMPLATE_ACTIVE`=0";    } else {      if (!in_array(1, CUser::GetUserGroup($USER->GetID()))) {        $filter = $filter . " AND `TEMPLATE_ACTIVE`=0";      } else {        $filter = $filter . " WHERE `TEMPLATE_ACTIVE`=0";      }    }  }  if (!in_array(1, CUser::GetUserGroup($USER->GetID()))) {    if ($_REQUEST['TYPE'] == 2) {      $filter = $filter . " OR (`USER_ID` = 1 and `TEMPLATE_ACTIVE` = 1)";    } else {      // $filter = $filter . " OR (`USER_ID` = 1 and `TEMPLATE_ACTIVE` = 0)";    }  }  if ($_GET['test']) {    echo '<pre>';    print_r($filter);    echo '</pre>';  }  if($_REQUEST['by']) $sort11 = $_REQUEST['by'];  if($_REQUEST['order']) $order11 = $_REQUEST['order'];  $ORDER_BY = "";  //if (!empty($_REQUEST['by']) && !empty($_REQUEST['order'])) {    $ORDER_BY = "ORDER BY " . $sort11 . " " . $order11; // }  $rsData = $DB->Query("SELECT * FROM `b_kp_module` " . $filter . " " . $ORDER_BY);  //$rsData = $results->Fetch();  // преобразуем список в экземпляр класса CAdminResult  $rsData = new CAdminResult($rsData, $sTableID);  // ******************************************************************** //  //                ПОДГОТОВКА СПИСКА К ВЫВОДУ                            //  // ******************************************************************** //  if($_REQUEST['TYPE'] == 2):    $lAdmin->AddHeaders(array(      array(        "id" => "ACTIVE",        "content" => GetMessage("ACTIVE"),        "sort" => "ACTIVE",        "align" => "left",        "default" => true,      ),      array(        "id" => "ID",        "content" => "ID",        "sort" => "ID",        "align" => "left",        "default" => true,      ),      array(        "id" => "KP_NAME",        "content" => GetMessage("NAME"),        "sort" => "KP_NAME",        "align" => "left",        "default" => true,      ),      array(        "id" => "DATE_INSERT",        "content" => GetMessage("DATE_INSERT"),        "sort" => "DATE_INSERT",        "align" => "left",        "default" => true,      ),      array(        "id" => "KP_HREF",        "content" => GetMessage("KP_HREF"),        "sort" => "KP_HREF",        "align" => "left",        "default" => true,      ),      array(        "id" => "KP_USER_EMAIL",        "content" => GetMessage("KP_USER_EMAIL"),        "sort" => "KP_USER_EMAIL",        "align" => "left",        "default" => true,      ),    ));  else:  $lAdmin->AddHeaders(array(    array(      "id" => "ACTIVE",      "content" => GetMessage("ACTIVE"),      "sort" => "ACTIVE",      "align" => "left",      "default" => true,    ),    array(      "id" => "ID",      "content" => "ID",      "sort" => "ID",      "align" => "left",      "default" => true,    ),    array(      "id" => "KP_NAME",      "content" => GetMessage("NAME"),      "sort" => "KP_NAME",      "align" => "left",      "default" => true,    ),    array(      "id" => "KP_COMPANY_NAME",      "content" => GetMessage("KP_COMPANY_NAME"),      "sort" => "KP_COMPANY_NAME",      "align" => "left",      "default" => true,    ),    array(      "id" => "DATE_INSERT",      "content" => GetMessage("DATE_INSERT"),      "sort" => "DATE_INSERT",      "align" => "left",      "default" => true,    ),    array(      "id" => "KP_OPEN_TIME",      "content" => GetMessage("KP_OPEN_TIME"),      "sort" => "KP_OPEN_TIME",      "align" => "left",      "default" => true,    ),    array(      "id" => "KP_HREF",      "content" => GetMessage("KP_HREF"),      "sort" => "KP_HREF",      "align" => "left",      "default" => true,    ),    array(      "id" => "KP_USER_EMAIL",      "content" => GetMessage("KP_USER_EMAIL"),      "sort" => "KP_USER_EMAIL",      "align" => "left",      "default" => true,    ),  ));  endif;  while ($arRes = $rsData->NavNext(true, "f_")):    if (!$USER->IsAdmin() && $arRes['ACTIVE_ADMIN']) {       continue;    }    // создаем строку. результат - экземпляр класса CAdminListRow    if ($arRes['ACTIVE'] == 1)      $arRes['ACTIVE'] = GetMessage("ACTIVE_Y"); else $arRes['ACTIVE'] = GetMessage("ACTIVE_N");    if ($arRes['KP_HREF'])      $arRes['KP_HREF'] = "http://" . $_SERVER['HTTP_HOST'] . "/kp/" . $arRes['KP_HREF'] . "/";    if ($arRes['DATE_INSERT']) {      $tmp = explode(" ", $arRes['DATE_INSERT']);      $tmp2 = explode("-", $tmp[0]);      $arRes['DATE_INSERT'] = $tmp2[2] . '-' . $tmp2[1] . '-' . $tmp2[0] . ' ' . $tmp[1];    }    $row =& $lAdmin->AddRow($f_ID, $arRes, "/bitrix/admin/kp_module_edit.php?TYPE=" . $_REQUEST['TYPE'] . "&ID=" . $arRes['ID'] . "&lang=ru");    // сформируем контекстное меню    $arActions = array();    $url = $arRes['KP_HREF'];    if ($_REQUEST['TYPE'] == 2) {      $arActions[] = array(        "ICON" => "edit",        "DEFAULT" => true,        "TEXT" => GetMessage("COPY_KP_TEMPL"),        "ACTION" => $lAdmin->ActionRedirect("/bitrix/admin/kp_module_index.php?TYPE=2&ACTION=create_kp&ID=".$f_ID),      );    }    $arActions[] = array(      "ICON" => "edit",      "DEFAULT" => true,      "TEXT" => GetMessage("OPEN_BROWSER"),      "ACTION" => "window.open('$url', '_blank')",    );      // редактирование элемента      $arActions[] = array(        "ICON" => "edit",        "DEFAULT" => true,        "TEXT" => GetMessage("rub_edit"),        "ACTION" => $lAdmin->ActionRedirect("kp_module_edit.php?TYPE=" . $_REQUEST['TYPE'] . "&ID=" . $f_ID)      );    // удаление элемента    if ($POST_RIGHT >= "W") {    //  if ($USER->IsAdmin()) {      $arActions[] = array(        "ICON" => "edit",        "TEXT" => GetMessage("POST_EDIT"),     //   "ACTION" => $lAdmin->ActionDoGroup($f_ID, "copy")        "ACTION" => $lAdmin->ActionRedirect("/bitrix/admin/kp_module_index.php?TYPE=2&ACTION=copy&ID=".$f_ID),      );    //  }      $arActions[] = array(        "ICON" => "delete",        "TEXT" => GetMessage("rub_del"),        "ACTION" => "if(confirm('" . GetMessage('rub_del_conf') . "')) " . $lAdmin->ActionDoGroup($f_ID, "delete")      );    }    // вставим разделитель    $arActions[] = array("SEPARATOR" => true);    // если последний элемент - разделитель, почистим мусор.    if (is_set($arActions[count($arActions) - 1], "SEPARATOR"))      unset($arActions[count($arActions) - 1]);    // применим контекстное меню к строке    $row->AddActions($arActions);  endwhile;  // резюме таблицы  $lAdmin->AddFooter(array(    array("title" => GetMessage("MAIN_ADMIN_LIST_SELECTED"), "value" => $rsData->SelectedRowsCount()),    // кол-во элементов    array("counter" => true, "title" => GetMessage("MAIN_ADMIN_LIST_CHECKED"), "value" => "0"),    // счетчик выбранных элементов  ));  if ($POST_RIGHT == "W") {    // групповые действия    if ($USER->IsAdmin()) {      $lAdmin->AddGroupActionTable(array(        "copy" => GetMessage("POST_EDIT2"),        "delete2" => GetMessage("rub_delete2"), // удалить выбранные элементы        "activate" => GetMessage("MAIN_ADMIN_LIST_ACTIVATE"), // активировать выбранные элементы        "deactivate" => GetMessage("MAIN_ADMIN_LIST_DEACTIVATE"), // деактивировать выбранные элементы      ));    } else {      $lAdmin->AddGroupActionTable(array(        "copy" => GetMessage("POST_EDIT2"),        "delete2" => GetMessage("rub_delete2"), // удалить выбранные элементы      ));    }  }  // ******************************************************************** //  //                АДМИНИСТРАТИВНОЕ МЕНЮ                                 //  // ******************************************************************** //  // сформируем меню из одного пункта - добавление рассылки  if ($POST_RIGHT == "W") {    $aContext = array();    if (!$_REQUEST['TYPE']) {      $aContext[] = array(        "TEXT" => GetMessage("OPEN_BROWSER"),        "LINK" => "",        "TITLE" => GetMessage("OPEN_BROWSER"),        "ICON" => "btn_open",      );    }    if ($USER->IsAdmin()) {///777      $aContext[] =        array(          "TEXT" => GetMessage("r_active"),          "LINK" => "#",          "TITLE" => GetMessage("r_active"),          "ICON" => "btn_active",        );      $aContext[] = array(        "TEXT" => GetMessage("r_deactive"),        "LINK" => "#",        "TITLE" => GetMessage("r_deactive"),        "ICON" => "btn_deactive",      );    }    $aContext[] = array(      "TEXT" => GetMessage("POST_ADD"),      "LINK" => "kp_module_edit.php?TYPE=".$_REQUEST['TYPE']."&lang=" . LANG,      "TITLE" => GetMessage("POST_ADD_TITLE"),      "ICON" => "btn_new",    );    $aContext[] = array(      "TEXT" => GetMessage("rub_edit"),      "LINK" => "",      "TITLE" => GetMessage("rub_edit"),      "ICON" => "btn_edit_kp",    );      $aContext[] = array(        "TEXT" => GetMessage("POST_EDIT"),        "LINK" => "",        "TITLE" => GetMessage("POST_EDIT"),        "ICON" => "btn_copy_kp",      );    if (!$_REQUEST['TYPE']) {      $aContext[] = array(        "TEXT" => GetMessage("SEND_KP"),        //   "LINK" => "kp_module_send.php?lang=" . LANG,        "LINK" => "",        "TITLE" => GetMessage("SEND_KP_TITLE"),        "ICON" => "btn_send_kp",      );    }    // и прикрепим его к списку    $lAdmin->AddAdminContextMenu($aContext);  }  // ******************************************************************** //  //                ВЫВОД                                                 //  // ******************************************************************** //  // альтернативный вывод  $lAdmin->CheckListMode();  // установим заголовок страницы  if ($_GET['TYPE'] == 2) {    $APPLICATION->SetTitle(GetMessage("rub_title2"));  } else    $APPLICATION->SetTitle(GetMessage("rub_title"));  // не забудем разделить подготовку данных и вывод  require($_SERVER["DOCUMENT_ROOT"] . "/bitrix/modules/main/include/prolog_admin_after.php");  // ******************************************************************** //  //                ВЫВОД ФИЛЬТРА                                         //  // ******************************************************************** //  // создадим объект фильтра  $oFilter = new CAdminFilter($sTableID . "_filter", array(    "ID",    GetMessage("NAME"),    GetMessage("KP_COMPANY_NAME")    // GetMessage("rub_f_site"),  ));  if ($POST_RIGHT == "NO_PAY") {    global $APPLICATION;    echo GetMessage("ACCESS_DENIED_NO_PAY");  }?>   <script src = "https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>   <script type = "text/javascript" src = "/local/modules/kp_module/lib/js/module.js"></script>   <link rel = "stylesheet" href = "/local/modules/kp_module/lib/css/module.css" type = "text/css"/>   <form name = "find_form" method = "get" action = "<? echo $APPLICATION->GetCurPage(); ?>">      <input type = "hidden" size = "25" name = "TYPE" value = "<?= $_REQUEST['TYPE'] ?>"/>     <? $oFilter->Begin(); ?>      <tr>         <td><b>ID:</b></td>         <td>            <input type = "text" size = "25" name = "find" value = "<? echo htmlspecialchars($find) ?>" title = "<?= GetMessage("rub_f_find_title") ?>">         </td>      </tr>      <tr>         <td><b><?= GetMessage("NAME") ?>:</b></td>         <td>            <input type = "text" size = "25" name = "FIND_NAME" value = "<? echo htmlspecialchars($FIND_NAME) ?>" title = "<?= GetMessage("NAME") ?>">         </td>      </tr>      <tr>         <td><b><?= GetMessage("KP_COMPANY_NAME") ?>:</b></td>         <td>            <input type = "text" size = "25" name = "FIND_KP_COMPANY_NAME" value = "<? echo htmlspecialchars($FIND_KP_COMPANY_NAME) ?>" title = "<?= GetMessage("KP_COMPANY_NAME") ?>">         </td>      </tr>     <?       $oFilter->Buttons(array("table_id" => $sTableID, "url" => $APPLICATION->GetCurPage(), "form" => "find_form"));       $oFilter->End();     ?>   </form><?  // выведем таблицу списка элементов  $lAdmin->DisplayList();?><?  // завершение страницы  require($_SERVER["DOCUMENT_ROOT"] . "/bitrix/modules/main/include/epilog_admin.php");?>